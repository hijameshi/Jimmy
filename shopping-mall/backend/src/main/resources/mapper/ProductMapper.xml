<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoppingmall.mapper.ProductMapper">

    <resultMap id="ProductResultMap" type="Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="price" column="price"/>
        <result property="stockQuantity" column="stock_quantity"/>
        <result property="categoryId" column="category_id"/>
        <result property="imageUrl" column="image_url"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="categoryName" column="category_name"/>
    </resultMap>

    <insert id="insertProduct" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO products (name, description, price, stock_quantity, category_id, image_url)
        VALUES (#{name}, #{description}, #{price}, #{stockQuantity}, #{categoryId}, #{imageUrl})
    </insert>

    <select id="findById" parameterType="Long" resultMap="ProductResultMap">
        SELECT p.*, c.name as category_name
        FROM products p
        LEFT JOIN categories c ON p.category_id = c.id
        WHERE p.id = #{id}
    </select>

    <select id="findAll" resultMap="ProductResultMap">
        SELECT p.*, c.name as category_name
        FROM products p
        LEFT JOIN categories c ON p.category_id = c.id
        ORDER BY p.created_at DESC
    </select>

    <select id="findByCategoryId" parameterType="Long" resultMap="ProductResultMap">
        SELECT p.*, c.name as category_name
        FROM products p
        LEFT JOIN categories c ON p.category_id = c.id
        WHERE p.category_id = #{categoryId}
        ORDER BY p.created_at DESC
    </select>

    <select id="findByNameContaining" parameterType="String" resultMap="ProductResultMap">
        SELECT p.*, c.name as category_name
        FROM products p
        LEFT JOIN categories c ON p.category_id = c.id
        WHERE p.name LIKE CONCAT('%', #{name}, '%')
        ORDER BY p.created_at DESC
    </select>

    <update id="updateProduct" parameterType="Product">
        UPDATE products 
        SET name = #{name},
            description = #{description},
            price = #{price},
            stock_quantity = #{stockQuantity},
            category_id = #{categoryId},
            image_url = #{imageUrl},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="Long">
        DELETE FROM products WHERE id = #{id}
    </delete>

    <update id="updateStock">
        UPDATE products 
        SET stock_quantity = #{quantity},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <update id="decreaseStock">
        UPDATE products 
        SET stock_quantity = stock_quantity - #{quantity},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id} AND stock_quantity >= #{quantity}
    </update>

</mapper>